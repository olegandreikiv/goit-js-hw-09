{"mappings":"iiBAGA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,KAAMF,SAASC,cAAc,aAC7BE,MAAOH,SAASC,cAAc,kBAC9BG,KAAMJ,SAASC,cAAc,iBAC7BI,OAAQL,SAASC,cAAc,mBAC/BK,OAAQN,SAASC,cAAc,oBAqCjC,SAASM,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUL,UAEpBQ,EAAO,CAAEH,WAAUL,S,GAEpBA,E,IA1COL,EAATQ,OAAOU,iBAAiB,SAG7B,SAAyBC,GACvBA,EAAEC,iBAGY,IAAVC,EAAaC,OAAOtB,EAAKK,MAAMkB,OAC/BjB,EAAOgB,OAAOtB,EAAKM,KAAKiB,OACxBhB,EAASe,OAAOtB,EAAKO,OAAOgB,OAEhCC,QAAQC,IAAIJ,EAAYf,EAAMC,GAGO,IAAhC,IAAImB,EAAI,EAAGA,GAAKnB,EAAS,EAAGmB,GAAK,EAAE,CACtC,IAAIC,EAAeN,EAAaf,EAAOoB,EAE7B,IAANA,IACFC,EAAeN,GAGWZ,EAAdiB,EAAGC,GAChBC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUL,EAAKwB,EAALxB,MACjByB,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAAN5B,EAAM,MAAK,CAAC6B,SAAS,G,IAEtFC,OAAM,SAAAN,G,IAAGnB,EAAQmB,EAARnB,SAAUL,EAAKwB,EAALxB,MAClByB,EAAAhC,GAASiC,OAAOK,QAAQ,sBAAuCH,OAAfvB,EAAS,QAAYuB,OAAN5B,EAAM,MAAK,CAAC6B,SAAS,G","sources":["src/js/03-promises.js"],"sourcesContent":["// Команди для встановлення бібліотек\n// $ npm i notiflix\n\nimport Notiflix from 'notiflix'; // бібліотека повідомлень\n\n// Починаємо відслідковувати події\nconst form = {\n  body: document.querySelector('body'),\n  form: document.querySelector('form.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  button: document.querySelector('[type=\"submit\"]'),\n}\n\n// Відправка форми button-click\nform.button.addEventListener('click', onPromiseCreate);\n\n\nfunction onPromiseCreate(e){\n  e.preventDefault(); // відміна оновлення сторінки\n  \n  // Збираємо данні з inputs\n  let valueDelay = Number(form.delay.value);\n  let step = Number(form.step.value);\n  let amount = Number(form.amount.value);\n\n  console.log(valueDelay, step, amount );\n\n  // Запускаємо повідомлення згідно кількості amount\n  for (let i = 0; i <= amount - 1; i += 1){\n    let promiseDelay = valueDelay + step * i; // рахуємо крок між повідомленнями\n\n    if (i === 0) {\n      promiseDelay = valueDelay; // заміна затримки першого промісу\n    }\n\n    createPromise(i, promiseDelay) \n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {useIcon: false,});\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {useIcon: false,});\n    });\n  };\n};\n\n\n// Викликаємо функцію згідно ТЗ\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","body","document","querySelector","form","delay","step","amount","button","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","valueDelay","Number","value","console","log","i","promiseDelay","then","param","$parcel$interopDefault","Notify","success","concat","useIcon","catch","failure"],"version":3,"file":"03-promises.414366b4.js.map"}